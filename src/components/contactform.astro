---
import Button from "./ui/button.astro";
---

<form
  action=""
  method="POST"
  data-form="contact"
  class="needs-validation"
  novalidate>
  <!-- First & Last name side‑by‑side -->
  <div class="mb-5 flex flex-col md:flex-row gap-4">
    <div class="flex-1">
      <label for="first_name" class="sr-only">First Name</label>
      <input
        id="first_name"
        name="first_name"
        type="text"
        placeholder="First Name*"
        required
        class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-hidden focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
      />
    </div>

    <div class="flex-1">
      <label for="last_name" class="sr-only">Last Name</label>
      <input
        id="last_name"
        name="last_name"
        type="text"
        placeholder="Last Name*"
        required
        class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-hidden focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
      />
    </div>
  </div>
  <div class="mb-5">
    <label for="email_address" class="sr-only">Email Address</label><input
      id="email_address"
      type="email"
      required
      placeholder="Email Address*"
      name="email"
      required
      class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-hidden focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
    />
    <div class="empty-feedback text-red-400 text-sm mt-1">
      Please provide your email address.
    </div>
    <div class="invalid-feedback text-red-400 text-sm mt-1">
      Please provide a valid email address.
    </div>
  </div>
  <div class="mb-5">
    <label for="phone" class="sr-only">Phone</label><input
      id="phone"
      type="phone"
      placeholder="Phone Number"
      name="phone"
      class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-hidden focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
    />
  </div>
  <div class="mb-3">
    <textarea
      name="message"
      required
      placeholder="Your Message*"
      class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-hidden h-36 focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
    ></textarea>
    <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
      Please enter your message.
    </div>
  </div>
  <Button type="submit" size="lg" block>Send Message</Button>
  <div id="result" class="mt-3 text-center"></div>
</form>

<style>
  .invalid-feedback,
  .empty-feedback {
    display: none;
  }

  .was-validated :placeholder-shown:invalid ~ .empty-feedback {
    display: block;
  }

  .was-validated :not(:placeholder-shown):invalid ~ .invalid-feedback {
    display: block;
  }

  .is-invalid,
  .was-validated :invalid {
    border-color: #dc3545;
  }
</style>

<script is:inline>
  const form   = document.querySelector('form[data-form="contact"]');
  const result = document.getElementById("result");

  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    form.classList.add("was-validated");

    if (!form.checkValidity()) {
      form.querySelector(":invalid").focus();
      return;
    }

    result.classList.remove("text-red-500", "text-green-500");
    result.textContent = "Sending…";

    try {
      const response = await fetch("/api/contact", {
        method: "POST",
        body: new FormData(form)   // send FormData so API route uses request.formData()
      });

      const data = await response.json().catch(() => ({}));

      if (response.ok) {
        result.classList.add("text-green-500");
        result.textContent = data.message || "Message sent successfully, thank you!";
      } else {
        result.classList.add("text-red-500");
        result.textContent = data.message || "There was an error sending your message.";
      }
    } catch (error) {
      console.error(error);
      result.classList.add("text-red-500");
      result.textContent = "Something went wrong!";
    } finally {
      form.reset();
      form.classList.remove("was-validated");
      setTimeout(() => (result.textContent = ""), 5000);
    }
  });
</script>
