---
import Layout from "@/layouts/Layout.astro";
import Button from "@/components/ui/button.astro";
---

<Layout title="Sign Up | Newsletter">
  <section class="py-16 max-w-xl mx-auto">
    <h1 class="text-4xl font-bold mb-4 text-center">
      Join the Newsletter
    </h1>
    <p class="mb-8 text-center text-slate-600">
      Get AI and digital marketing insights straight to your inbox.
    </p>

    <form action="" method="POST" data-form="signup" class="needs-validation flex flex-col gap-4" novalidate>
      <div class="mb-5">
        <label class="sr-only" for="name">Full Name</label>
        <input
          id="name"
          name="name"
          type="text"
          placeholder="Full Name"
          required
          class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-hidden focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
        />
        <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
          Please provide your full name.
        </div>
      </div>
      <div class="mb-5">
        <label class="sr-only" for="email_address">Email Address</label>
        <input
          id="email_address"
          name="email"
          type="email"
          placeholder="Email Address"
          required
          class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-hidden focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
        />
        <div class="empty-feedback text-red-400 text-sm mt-1">
          Please provide your email address.
        </div>
        <div class="invalid-feedback text-red-400 text-sm mt-1">
          Please provide a valid email address.
        </div>
      </div>

      <Button type="submit" size="lg" block>Subscribe</Button>
      <div id="result" class="mt-3 text-center"></div>
    </form>

    <style>
      .invalid-feedback,
      .empty-feedback { display: none; }
      .was-validated :placeholder-shown:invalid ~ .empty-feedback { display: block; }
      .was-validated :not(:placeholder-shown):invalid ~ .invalid-feedback { display: block; }
      .is-invalid,
      .was-validated :invalid { border-color: #dc3545; }
    </style>

    <script is:inline>
      const form   = document.querySelector('form[data-form="signup"]');
      const result = document.getElementById("result");

      form.addEventListener("submit", async (e) => {
        e.preventDefault();
        form.classList.add("was-validated");
        if (!form.checkValidity()) {
          form.querySelector(":invalid").focus();
          return;
        }

        result.classList.remove("text-red-500","text-green-500");
        result.textContent = "Sendingâ€¦";

        try {
          const response = await fetch("/api/signup", {
            method: "POST",
            body: new FormData(form)
          });
          const data = await response.json().catch(()=>({}));

          if (response.ok) {
            result.classList.add("text-green-500");
            result.textContent = data.message || "Thank you for subscribing!";
          } else {
            result.classList.add("text-red-500");
            result.textContent = data.message || "There was an error, please try again.";
          }
        } catch {
          result.classList.add("text-red-500");
          result.textContent = "Network error. Please try again later.";
        } finally {
          form.reset();
          form.classList.remove("was-validated");
          setTimeout(() => (result.textContent = ""), 5000);
        }
      });
    </script>
  </section>
</Layout>